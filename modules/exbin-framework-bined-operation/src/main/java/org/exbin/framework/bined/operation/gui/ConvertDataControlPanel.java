/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.bined.operation.gui;

import java.awt.event.ActionEvent;
import java.util.Optional;
import javax.annotation.Nonnull;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.JButton;
import org.exbin.framework.App;
import org.exbin.framework.help.api.HelpLink;
import org.exbin.framework.help.api.HelpLinkable;
import org.exbin.framework.help.api.HelpModuleApi;
import org.exbin.framework.language.api.LanguageModuleApi;
import org.exbin.framework.utils.TestApplication;
import org.exbin.framework.utils.WindowUtils;
import org.exbin.framework.utils.UiUtils;
import org.exbin.framework.utils.UtilsModule;
import org.exbin.framework.utils.OkCancelControlComponent;

/**
 * Convert data control panel.
 *
 * @author ExBin Project (https://exbin.org)
 */
@ParametersAreNonnullByDefault
public class ConvertDataControlPanel extends javax.swing.JPanel implements OkCancelControlComponent, HelpLinkable {

    private final java.util.ResourceBundle resourceBundle;
    private ConvertDataControlController controller;
    private HelpLink helpLink;

    public ConvertDataControlPanel() {
        this(App.getModule(LanguageModuleApi.class).getBundle(ConvertDataControlPanel.class));
        initComponents();
        init();
    }

    public ConvertDataControlPanel(java.util.ResourceBundle resourceBundle) {
        this.resourceBundle = resourceBundle;
        initComponents();
        init();
    }

    private void init() {
        helpButton.addActionListener((ActionEvent e) -> {
            if (helpLink != null) {
                HelpModuleApi helpModule = App.getModule(HelpModuleApi.class);
                helpModule.openHelp(helpLink);
            }
        });
    }

    public void setController(ConvertDataControlController controller) {
        this.controller = controller;
    }

    @Override
    public void setHelpLink(HelpLink helpLink) {
        this.helpLink = helpLink;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        helpButton = App.getModule(HelpModuleApi.class).createHelpButton();
        convertToNewFileButton = new javax.swing.JButton();
        convertToClipboardButton = new javax.swing.JButton();
        convertButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        convertToNewFileButton.setText(resourceBundle.getString("convertToNewFileButton.text")); // NOI18N
        convertToNewFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertToNewFileButtonActionPerformed(evt);
            }
        });

        convertToClipboardButton.setText(resourceBundle.getString("convertToClipboardButton.text")); // NOI18N
        convertToClipboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertToClipboardButtonActionPerformed(evt);
            }
        });

        convertButton.setText(resourceBundle.getString("convertButton.text")); // NOI18N
        convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceBundle.getString("cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(helpButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(convertToNewFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(convertToClipboardButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(convertButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(helpButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancelButton)
                        .addComponent(convertButton)
                        .addComponent(convertToNewFileButton)
                        .addComponent(convertToClipboardButton)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed
        if (controller != null) {
            controller.controlActionPerformed(ConvertDataControlController.ControlActionType.CONVERT);
        }
    }//GEN-LAST:event_convertButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        if (controller != null) {
            controller.controlActionPerformed(ConvertDataControlController.ControlActionType.CANCEL);
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void convertToNewFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertToNewFileButtonActionPerformed
        if (controller != null) {
            controller.controlActionPerformed(ConvertDataControlController.ControlActionType.CONVERT_TO_NEW_FILE);
        }
    }//GEN-LAST:event_convertToNewFileButtonActionPerformed

    private void convertToClipboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertToClipboardButtonActionPerformed
        if (controller != null) {
            controller.controlActionPerformed(ConvertDataControlController.ControlActionType.CONVERT_TO_CLIPBOARD);
        }
    }//GEN-LAST:event_convertToClipboardButtonActionPerformed

    public void performClick(ConvertDataControlController.ControlActionType actionType) {
        switch (actionType) {
            case CONVERT: {
                UiUtils.doButtonClick(convertButton);
                break;
            }
            case CANCEL: {
                UiUtils.doButtonClick(cancelButton);
                break;
            }
            case CONVERT_TO_NEW_FILE: {
                UiUtils.doButtonClick(convertToNewFileButton);
                break;
            }
            case CONVERT_TO_CLIPBOARD: {
                UiUtils.doButtonClick(convertToClipboardButton);
                break;
            }
        }
    }

    @Nonnull
    @Override
    public Optional<JButton> getDefaultButton() {
        return Optional.of(cancelButton);
    }

    @Override
    public void invokeOkEvent() {
        performClick(ConvertDataControlController.ControlActionType.CONVERT);
    }

    @Override
    public void invokeCancelEvent() {
        performClick(ConvertDataControlController.ControlActionType.CANCEL);
    }

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        TestApplication testApplication = UtilsModule.createTestApplication();
        testApplication.launch(() -> {
            testApplication.addModule(org.exbin.framework.language.api.LanguageModuleApi.MODULE_ID, new org.exbin.framework.language.api.utils.TestLanguageModule());
            WindowUtils.invokeWindow(new ConvertDataControlPanel());
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton convertButton;
    private javax.swing.JButton convertToClipboardButton;
    private javax.swing.JButton convertToNewFileButton;
    private javax.swing.JButton helpButton;
    // End of variables declaration//GEN-END:variables

}
